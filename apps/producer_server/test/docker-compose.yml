version: "3"

services:
    database:
        container_name: "postgres-for-testing"
        image: postgres:14-alpine
        command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "54320:5432"
        tmpfs: /var/lib/postgresql/data

    zookeeper:
        image: confluentinc/cp-zookeeper:6.2.0
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:6.2.0
        ports:
            # To learn about configuring Kafka for access across networks see
            # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
            - "9093:9092"
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    kafka-setup:
        image: confluentinc/cp-kafka:6.2.0
        hostname: kafka-setup
        container_name: kafka-setup
        depends_on:
            - kafka
            - zookeeper
        command: "bash -c 'echo Waiting for Kafka to be ready... && \
            cub kafka-ready -b kafka:9092 1 30 && \
            kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic events-message-v1 && \
            sleep 30'"
        environment:
            # The following settings are listed here only to satisfy the image's requirements.
            # We override the image's `command` anyways, hence this container will not start a broker.
            KAFKA_BROKER_ID: ignored
            KAFKA_ZOOKEEPER_CONNECT: ignored
